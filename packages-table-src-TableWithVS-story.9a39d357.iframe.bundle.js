"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2089],{"./packages/table/src/TableWithVS.story.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,ExpandableContent:()=>ExpandableContent,NestedRows:()=>NestedRows,SelectableRows:()=>SelectableRows,SortableRows:()=>SortableRows,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _templateObject,_Basic$parameters,_Basic$parameters2,_Basic$parameters2$do,_NestedRows$parameter,_NestedRows$parameter2,_NestedRows$parameter3,_SortableRows$paramet,_SortableRows$paramet2,_SortableRows$paramet3,_SelectableRows$param,_SelectableRows$param2,_SelectableRows$param3,_ExpandableContent$pa,_ExpandableContent$pa2,_ExpandableContent$pa3,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/emotion/dist/esm/index.js"),_leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/lib/dist/esm/index.js"),_utils_makeData_testutils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/table/src/utils/makeData.testutils.tsx"),___WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/table/src/index.ts");function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i)return;_n=!1}else for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=_i.return&&(_r=_i.return(),Object(_r)!==_r))return}finally{if(_d)throw _e}}return _arr}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Table/With Virtualized Scrolling",component:___WEBPACK_IMPORTED_MODULE_4__.iA,argTypes:{children:{control:"none"},darkMode:_leafygreen_ui_lib__WEBPACK_IMPORTED_MODULE_2__.bN.darkMode,ref:{control:"none"}},parameters:{default:"Basic",chromatic:{disableSnapshot:!0},docs:{source:{type:"code"}}}};var virtualScrollingContainerHeight=(0,_leafygreen_ui_emotion__WEBPACK_IMPORTED_MODULE_1__.css)(_templateObject||(_templateObject=function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}(["\n  height: 500px;\n"]))),Basic=function Basic(args){var _table$virtualRows,tableContainerRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),data=react__WEBPACK_IMPORTED_MODULE_0__.useState((function(){return(0,_utils_makeData_testutils__WEBPACK_IMPORTED_MODULE_3__._)(!1,1e4)}))[0],columns=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return[{accessorKey:"id",header:"ID",size:60},{accessorKey:"firstName",header:"First Name",cell:function cell(info){return info.getValue()}},{accessorFn:function accessorFn(row){return row.lastName},id:"lastName",cell:function cell(info){return info.getValue()},header:function header(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"Last Name")}},{accessorKey:"age",header:function header(){return"Age"},size:50},{accessorKey:"visits",header:function header(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"Visits")},size:50},{accessorKey:"status",header:"Status",size:90}]}),[]),table=(0,___WEBPACK_IMPORTED_MODULE_4__.p0)({containerRef:tableContainerRef,data,columns,useVirtualScrolling:!0}),rows=table.getRowModel().rows;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,table.getRowModel().rows.length," total rows"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,null==table||null===(_table$virtualRows=table.virtualRows)||void 0===_table$virtualRows?void 0:_table$virtualRows.length," virtual rows")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.iA,_extends({},args,{table,ref:tableContainerRef,className:virtualScrollingContainerHeight}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.ss,null,table.getHeaderGroups().map((function(headerGroup){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.VJ,{key:headerGroup.id},headerGroup.headers.map((function(header){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.qN,{key:header.id,header},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(header.column.columnDef.header,header.getContext()))})))}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.RM,null,table.virtualRows&&table.virtualRows.map((function(virtualRow){var row=rows[virtualRow.index],cells=row.getVisibleCells();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.X2,{key:row.id},cells.map((function(cell){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.bL,{key:cell.id},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(cell.column.columnDef.cell,cell.getContext()))})))})))))},NestedRows=function NestedRows(args){var tableContainerRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),data=react__WEBPACK_IMPORTED_MODULE_0__.useState((function(){return(0,_utils_makeData_testutils__WEBPACK_IMPORTED_MODULE_3__._)(!1,5e3,5,3)}))[0],columns=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return[{accessorKey:"id",header:"ID",size:60},{accessorKey:"firstName",header:"First Name",cell:function cell(info){return info.getValue()}},{accessorFn:function accessorFn(row){return row.lastName},id:"lastName",cell:function cell(info){return info.getValue()},header:function header(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"Last Name")}},{accessorKey:"age",header:function header(){return"Age"},size:50},{accessorKey:"visits",header:function header(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"Visits")},size:50},{accessorKey:"status",header:"Status",size:90}]}),[]),table=(0,___WEBPACK_IMPORTED_MODULE_4__.p0)({containerRef:tableContainerRef,data,columns,useVirtualScrolling:!0}),rows=table.getRowModel().rows;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,table.getRowModel().rows.length," total rows")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.iA,_extends({},args,{table,ref:tableContainerRef,className:virtualScrollingContainerHeight}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.ss,null,table.getHeaderGroups().map((function(headerGroup){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.VJ,{key:headerGroup.id},headerGroup.headers.map((function(header){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.qN,{key:header.id,header},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(header.column.columnDef.header,header.getContext()))})))}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.RM,null,table.virtualRows&&table.virtualRows.map((function(virtualRow){var row=rows[virtualRow.index],cells=row.getVisibleCells();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.X2,{key:row.id,row,virtualRow},cells.map((function(cell){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.bL,{key:cell.id},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(cell.column.columnDef.cell,cell.getContext()))})),row.subRows&&row.subRows.map((function(subRow){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.X2,{key:subRow.id,row:subRow,virtualRow},subRow.getVisibleCells().map((function(cell){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.bL,{key:cell.id},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(cell.column.columnDef.cell,cell.getContext()))})),subRow.subRows&&subRow.subRows.map((function(subSubRow){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.X2,{key:subSubRow.id,row:subSubRow,virtualRow},subSubRow.getVisibleCells().map((function(cell){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.bL,{key:cell.id},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(cell.column.columnDef.cell,cell.getContext()))})))})))})))})))))},SortableRows=function SortableRows(args){var tableContainerRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),data=react__WEBPACK_IMPORTED_MODULE_0__.useState((function(){return(0,_utils_makeData_testutils__WEBPACK_IMPORTED_MODULE_3__._)(!1,5e3)}))[0],_React$useState2=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_0__.useState([]),2),sorting=_React$useState2[0],setSorting=_React$useState2[1],columns=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return[{accessorKey:"id",header:"ID",size:60,enableSorting:!0},{accessorKey:"firstName",header:"First Name",cell:function cell(info){return info.getValue()}},{accessorFn:function accessorFn(row){return row.lastName},id:"lastName",cell:function cell(info){return info.getValue()},header:function header(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"Last Name")},enableSorting:!0},{accessorKey:"age",header:function header(){return"Age"},size:50,enableSorting:!0},{accessorKey:"visits",header:function header(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"Visits")},size:50},{accessorKey:"status",header:"Status",size:90}]}),[]),table=(0,___WEBPACK_IMPORTED_MODULE_4__.p0)({containerRef:tableContainerRef,data,columns,state:{sorting},onSortingChange:setSorting,useVirtualScrolling:!0}),rows=table.getRowModel().rows;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,table.getRowModel().rows.length," total rows")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.iA,_extends({},args,{table,ref:tableContainerRef,className:virtualScrollingContainerHeight}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.ss,null,table.getHeaderGroups().map((function(headerGroup){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.VJ,{key:headerGroup.id},headerGroup.headers.map((function(header){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.qN,{key:header.id,header},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(header.column.columnDef.header,header.getContext()))})))}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.RM,null,table.virtualRows&&table.virtualRows.map((function(virtualRow){var row=rows[virtualRow.index],cells=row.getVisibleCells();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.X2,{key:row.id,row,virtualRow},cells.map((function(cell){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.bL,{key:cell.id},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(cell.column.columnDef.cell,cell.getContext()))})))})))))},SelectableRows=function SelectableRows(args){var tableContainerRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),data=react__WEBPACK_IMPORTED_MODULE_0__.useState((function(){return(0,_utils_makeData_testutils__WEBPACK_IMPORTED_MODULE_3__._)(!1,5e3)}))[0],_React$useState4=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_0__.useState({}),2),rowSelection=_React$useState4[0],setRowSelection=_React$useState4[1],columns=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return[{accessorKey:"id",header:"ID",size:60},{accessorKey:"firstName",header:"First Name",cell:function cell(info){return info.getValue()}},{accessorFn:function accessorFn(row){return row.lastName},id:"lastName",cell:function cell(info){return info.getValue()},header:function header(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"Last Name")}},{accessorKey:"age",header:function header(){return"Age"},size:50},{accessorKey:"visits",header:function header(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"Visits")},size:50},{accessorKey:"status",header:"Status",size:90}]}),[]),table=(0,___WEBPACK_IMPORTED_MODULE_4__.p0)({containerRef:tableContainerRef,data,columns,state:{rowSelection},onRowSelectionChange:setRowSelection,hasSelectableRows:!0,useVirtualScrolling:!0}),rows=table.getRowModel().rows;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,table.getRowModel().rows.length," total rows")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.iA,_extends({},args,{table,ref:tableContainerRef,className:virtualScrollingContainerHeight}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.ss,null,table.getHeaderGroups().map((function(headerGroup){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.VJ,{key:headerGroup.id},headerGroup.headers.map((function(header){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.qN,{key:header.id,header},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(header.column.columnDef.header,header.getContext()))})))}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.RM,null,table.virtualRows&&table.virtualRows.map((function(virtualRow){var row=rows[virtualRow.index],cells=row.getVisibleCells();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.X2,{key:row.id,row,virtualRow},cells.map((function(cell){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.bL,{key:cell.id},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(cell.column.columnDef.cell,cell.getContext()))})))})))))},ExpandableContent=function ExpandableContent(args){var tableContainerRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),data=react__WEBPACK_IMPORTED_MODULE_0__.useState((function(){return(0,_utils_makeData_testutils__WEBPACK_IMPORTED_MODULE_3__._)(!0,5e3)}))[0],_React$useState6=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_0__.useState({}),2),expanded=_React$useState6[0],setExpanded=_React$useState6[1],columns=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return[{accessorKey:"id",header:"ID",size:60},{accessorKey:"firstName",header:"First Name",cell:function cell(info){return info.getValue()}},{accessorFn:function accessorFn(row){return row.lastName},id:"lastName",cell:function cell(info){return info.getValue()},header:function header(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"Last Name")}},{accessorKey:"age",header:function header(){return"Age"},size:50},{accessorKey:"visits",header:function header(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"Visits")},size:50},{accessorKey:"status",header:"Status",size:90}]}),[]),table=(0,___WEBPACK_IMPORTED_MODULE_4__.p0)({containerRef:tableContainerRef,data,columns,state:{expanded},onExpandedChange:setExpanded,useVirtualScrolling:!0}),rows=table.getRowModel().rows;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,table.getRowModel().rows.length," total rows")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.iA,_extends({},args,{table,ref:tableContainerRef,className:virtualScrollingContainerHeight}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.ss,null,table.getHeaderGroups().map((function(headerGroup){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.VJ,{key:headerGroup.id},headerGroup.headers.map((function(header){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.qN,{key:header.id,header},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(header.column.columnDef.header,header.getContext()))})))}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.RM,null,table.virtualRows&&table.virtualRows.map((function(virtualRow){var row=rows[virtualRow.index],cells=row.getVisibleCells();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.X2,{key:row.id,row,virtualRow},cells.map((function(cell){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.bL,{key:cell.id},(0,___WEBPACK_IMPORTED_MODULE_4__.ie)(cell.column.columnDef.cell,cell.getContext()))})),row.original.renderExpandedContent&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_4__.Sr,{row}))})))))};Basic.parameters=_objectSpread(_objectSpread({},Basic.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Basic$parameters=Basic.parameters)||void 0===_Basic$parameters?void 0:_Basic$parameters.docs),{},{source:_objectSpread({originalSource:"args => {\n  const tableContainerRef = React.useRef<HTMLDivElement>(null);\n  const data = React.useState(() => makeData(false, 10_000))[0];\n  const columns = React.useMemo<Array<ColumnDef<Person>>>(() => [{\n    accessorKey: 'id',\n    header: 'ID',\n    size: 60\n  }, {\n    accessorKey: 'firstName',\n    header: 'First Name',\n    cell: info => info.getValue()\n  }, {\n    accessorFn: row => row.lastName,\n    id: 'lastName',\n    cell: info => info.getValue(),\n    // eslint-disable-next-line react/display-name\n    header: () => <span>Last Name</span>\n  }, {\n    accessorKey: 'age',\n    // eslint-disable-next-line react/display-name\n    header: () => 'Age',\n    size: 50\n  }, {\n    accessorKey: 'visits',\n    // eslint-disable-next-line react/display-name\n    header: () => <span>Visits</span>,\n    size: 50\n  }, {\n    accessorKey: 'status',\n    header: 'Status',\n    size: 90\n  }], []);\n  const table = useLeafyGreenTable<Person>({\n    containerRef: tableContainerRef,\n    data,\n    columns,\n    useVirtualScrolling: true\n  });\n  const {\n    rows\n  } = table.getRowModel();\n  return <>\n      <div>\n        <p>{table.getRowModel().rows.length} total rows</p>\n        <p>{table?.virtualRows?.length} virtual rows</p>\n      </div>\n\n      <Table {...args} table={table} ref={tableContainerRef} className={virtualScrollingContainerHeight}>\n        <TableHead>\n          {table.getHeaderGroups().map((headerGroup: HeaderGroup<Person>) => <HeaderRow key={headerGroup.id}>\n              {headerGroup.headers.map(header => {\n            return <HeaderCell key={header.id} header={header}>\n                    {flexRender(header.column.columnDef.header, header.getContext())}\n                  </HeaderCell>;\n          })}\n            </HeaderRow>)}\n        </TableHead>\n        <TableBody>\n          {table.virtualRows && table.virtualRows.map((virtualRow: VirtualItem) => {\n          const row = rows[virtualRow.index];\n          const cells = row.getVisibleCells();\n          return <Row key={row.id}>\n                  {cells.map((cell: LeafyGreenTableCell<Person>) => {\n              return <Cell key={cell.id}>\n                        {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                      </Cell>;\n            })}\n                </Row>;\n        })}\n        </TableBody>\n      </Table>\n    </>;\n}"},null===(_Basic$parameters2=Basic.parameters)||void 0===_Basic$parameters2||null===(_Basic$parameters2$do=_Basic$parameters2.docs)||void 0===_Basic$parameters2$do?void 0:_Basic$parameters2$do.source)})}),NestedRows.parameters=_objectSpread(_objectSpread({},NestedRows.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_NestedRows$parameter=NestedRows.parameters)||void 0===_NestedRows$parameter?void 0:_NestedRows$parameter.docs),{},{source:_objectSpread({originalSource:"args => {\n  const tableContainerRef = React.useRef<HTMLDivElement>(null);\n  const data = React.useState(() => makeData(false, 5000, 5, 3))[0];\n  const columns = React.useMemo<Array<ColumnDef<Person>>>(() => [{\n    accessorKey: 'id',\n    header: 'ID',\n    size: 60\n  }, {\n    accessorKey: 'firstName',\n    header: 'First Name',\n    cell: info => info.getValue()\n  }, {\n    accessorFn: row => row.lastName,\n    id: 'lastName',\n    cell: info => info.getValue(),\n    // eslint-disable-next-line react/display-name\n    header: () => <span>Last Name</span>\n  }, {\n    accessorKey: 'age',\n    // eslint-disable-next-line react/display-name\n    header: () => 'Age',\n    size: 50\n  }, {\n    accessorKey: 'visits',\n    // eslint-disable-next-line react/display-name\n    header: () => <span>Visits</span>,\n    size: 50\n  }, {\n    accessorKey: 'status',\n    header: 'Status',\n    size: 90\n  }], []);\n  const table = useLeafyGreenTable<Person>({\n    containerRef: tableContainerRef,\n    data,\n    columns,\n    useVirtualScrolling: true\n  });\n  const {\n    rows\n  } = table.getRowModel();\n  return <>\n      <div>\n        <p>{table.getRowModel().rows.length} total rows</p>\n      </div>\n\n      <Table {...args} table={table} ref={tableContainerRef} className={virtualScrollingContainerHeight}>\n        <TableHead>\n          {table.getHeaderGroups().map((headerGroup: HeaderGroup<Person>) => <HeaderRow key={headerGroup.id}>\n              {headerGroup.headers.map(header => {\n            return <HeaderCell key={header.id} header={header}>\n                    {flexRender(header.column.columnDef.header, header.getContext())}\n                  </HeaderCell>;\n          })}\n            </HeaderRow>)}\n        </TableHead>\n        <TableBody>\n          {table.virtualRows && table.virtualRows.map((virtualRow: VirtualItem) => {\n          const row = rows[virtualRow.index];\n          const cells = row.getVisibleCells();\n          return <Row key={row.id} row={row} virtualRow={virtualRow}>\n                  {cells.map((cell: LeafyGreenTableCell<Person>) => {\n              return <Cell key={cell.id}>\n                        {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                      </Cell>;\n            })}\n                  {row.subRows && row.subRows.map((subRow: LeafyGreenTableRow<Person>) => <Row key={subRow.id} row={subRow} virtualRow={virtualRow}>\n                        {subRow.getVisibleCells().map((cell: LeafyGreenTableCell<Person>) => {\n                return <Cell key={cell.id}>\n                                {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                              </Cell>;\n              })}\n                        {subRow.subRows && subRow.subRows.map(subSubRow => <Row key={subSubRow.id} row={subSubRow} virtualRow={virtualRow}>\n                              {subSubRow.getVisibleCells().map((cell: LeafyGreenTableCell<Person>) => {\n                  return <Cell key={cell.id}>\n                                      {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                                    </Cell>;\n                })}\n                            </Row>)}\n                      </Row>)}\n                </Row>;\n        })}\n        </TableBody>\n      </Table>\n    </>;\n}"},null===(_NestedRows$parameter2=NestedRows.parameters)||void 0===_NestedRows$parameter2||null===(_NestedRows$parameter3=_NestedRows$parameter2.docs)||void 0===_NestedRows$parameter3?void 0:_NestedRows$parameter3.source)})}),SortableRows.parameters=_objectSpread(_objectSpread({},SortableRows.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_SortableRows$paramet=SortableRows.parameters)||void 0===_SortableRows$paramet?void 0:_SortableRows$paramet.docs),{},{source:_objectSpread({originalSource:"args => {\n  const tableContainerRef = React.useRef<HTMLDivElement>(null);\n  const data = React.useState(() => makeData(false, 5000))[0];\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const columns = React.useMemo<Array<ColumnDef<Person>>>(() => [{\n    accessorKey: 'id',\n    header: 'ID',\n    size: 60,\n    enableSorting: true\n  }, {\n    accessorKey: 'firstName',\n    header: 'First Name',\n    cell: info => info.getValue()\n  }, {\n    accessorFn: row => row.lastName,\n    id: 'lastName',\n    cell: info => info.getValue(),\n    // eslint-disable-next-line react/display-name\n    header: () => <span>Last Name</span>,\n    enableSorting: true\n  }, {\n    accessorKey: 'age',\n    // eslint-disable-next-line react/display-name\n    header: () => 'Age',\n    size: 50,\n    enableSorting: true\n  }, {\n    accessorKey: 'visits',\n    // eslint-disable-next-line react/display-name\n    header: () => <span>Visits</span>,\n    size: 50\n  }, {\n    accessorKey: 'status',\n    header: 'Status',\n    size: 90\n  }], []);\n  const table = useLeafyGreenTable<Person>({\n    containerRef: tableContainerRef,\n    data,\n    columns,\n    state: {\n      sorting\n    },\n    onSortingChange: setSorting,\n    useVirtualScrolling: true\n  });\n  const {\n    rows\n  } = table.getRowModel();\n  return <>\n      <div>\n        <p>{table.getRowModel().rows.length} total rows</p>\n      </div>\n\n      <Table {...args} table={table} ref={tableContainerRef} className={virtualScrollingContainerHeight}>\n        <TableHead>\n          {table.getHeaderGroups().map((headerGroup: HeaderGroup<Person>) => <HeaderRow key={headerGroup.id}>\n              {headerGroup.headers.map(header => {\n            return <HeaderCell key={header.id} header={header}>\n                    {flexRender(header.column.columnDef.header, header.getContext())}\n                  </HeaderCell>;\n          })}\n            </HeaderRow>)}\n        </TableHead>\n        <TableBody>\n          {table.virtualRows && table.virtualRows.map((virtualRow: VirtualItem) => {\n          const row = rows[virtualRow.index];\n          const cells = row.getVisibleCells();\n          return <Row key={row.id} row={row} virtualRow={virtualRow}>\n                  {cells.map((cell: LeafyGreenTableCell<Person>) => {\n              return <Cell key={cell.id}>\n                        {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                      </Cell>;\n            })}\n                </Row>;\n        })}\n        </TableBody>\n      </Table>\n    </>;\n}"},null===(_SortableRows$paramet2=SortableRows.parameters)||void 0===_SortableRows$paramet2||null===(_SortableRows$paramet3=_SortableRows$paramet2.docs)||void 0===_SortableRows$paramet3?void 0:_SortableRows$paramet3.source)})}),SelectableRows.parameters=_objectSpread(_objectSpread({},SelectableRows.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_SelectableRows$param=SelectableRows.parameters)||void 0===_SelectableRows$param?void 0:_SelectableRows$param.docs),{},{source:_objectSpread({originalSource:"args => {\n  const tableContainerRef = React.useRef<HTMLDivElement>(null);\n  const data = React.useState(() => makeData(false, 5000))[0];\n  const [rowSelection, setRowSelection] = React.useState({});\n  const columns = React.useMemo<Array<ColumnDef<Person>>>(() => [{\n    accessorKey: 'id',\n    header: 'ID',\n    size: 60\n  }, {\n    accessorKey: 'firstName',\n    header: 'First Name',\n    cell: info => info.getValue()\n  }, {\n    accessorFn: row => row.lastName,\n    id: 'lastName',\n    cell: info => info.getValue(),\n    // eslint-disable-next-line react/display-name\n    header: () => <span>Last Name</span>\n  }, {\n    accessorKey: 'age',\n    // eslint-disable-next-line react/display-name\n    header: () => 'Age',\n    size: 50\n  }, {\n    accessorKey: 'visits',\n    // eslint-disable-next-line react/display-name\n    header: () => <span>Visits</span>,\n    size: 50\n  }, {\n    accessorKey: 'status',\n    header: 'Status',\n    size: 90\n  }], []);\n  const table = useLeafyGreenTable<Person>({\n    containerRef: tableContainerRef,\n    data,\n    columns,\n    state: {\n      rowSelection\n    },\n    onRowSelectionChange: setRowSelection,\n    hasSelectableRows: true,\n    useVirtualScrolling: true\n  });\n  const {\n    rows\n  } = table.getRowModel();\n  return <>\n      <div>\n        <p>{table.getRowModel().rows.length} total rows</p>\n      </div>\n\n      <Table {...args} table={table} ref={tableContainerRef} className={virtualScrollingContainerHeight}>\n        <TableHead>\n          {table.getHeaderGroups().map((headerGroup: HeaderGroup<Person>) => <HeaderRow key={headerGroup.id}>\n              {headerGroup.headers.map(header => {\n            return <HeaderCell key={header.id} header={header}>\n                    {flexRender(header.column.columnDef.header, header.getContext())}\n                  </HeaderCell>;\n          })}\n            </HeaderRow>)}\n        </TableHead>\n        <TableBody>\n          {table.virtualRows && table.virtualRows.map((virtualRow: VirtualItem) => {\n          const row = rows[virtualRow.index];\n          const cells = row.getVisibleCells();\n          return <Row key={row.id} row={row} virtualRow={virtualRow}>\n                  {cells.map((cell: LeafyGreenTableCell<Person>) => {\n              return <Cell key={cell.id}>\n                        {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                      </Cell>;\n            })}\n                </Row>;\n        })}\n        </TableBody>\n      </Table>\n    </>;\n}"},null===(_SelectableRows$param2=SelectableRows.parameters)||void 0===_SelectableRows$param2||null===(_SelectableRows$param3=_SelectableRows$param2.docs)||void 0===_SelectableRows$param3?void 0:_SelectableRows$param3.source)})}),ExpandableContent.parameters=_objectSpread(_objectSpread({},ExpandableContent.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_ExpandableContent$pa=ExpandableContent.parameters)||void 0===_ExpandableContent$pa?void 0:_ExpandableContent$pa.docs),{},{source:_objectSpread({originalSource:"args => {\n  const tableContainerRef = React.useRef<HTMLDivElement>(null);\n  const data = React.useState(() => makeData(true, 5000))[0];\n  const [expanded, setExpanded] = React.useState<ExpandedState>({});\n  const columns = React.useMemo<Array<ColumnDef<Person>>>(() => [{\n    accessorKey: 'id',\n    header: 'ID',\n    size: 60\n  }, {\n    accessorKey: 'firstName',\n    header: 'First Name',\n    cell: info => info.getValue()\n  }, {\n    accessorFn: row => row.lastName,\n    id: 'lastName',\n    cell: info => info.getValue(),\n    // eslint-disable-next-line react/display-name\n    header: () => <span>Last Name</span>\n  }, {\n    accessorKey: 'age',\n    // eslint-disable-next-line react/display-name\n    header: () => 'Age',\n    size: 50\n  }, {\n    accessorKey: 'visits',\n    // eslint-disable-next-line react/display-name\n    header: () => <span>Visits</span>,\n    size: 50\n  }, {\n    accessorKey: 'status',\n    header: 'Status',\n    size: 90\n  }], []);\n  const table = useLeafyGreenTable<Person>({\n    containerRef: tableContainerRef,\n    data,\n    columns,\n    state: {\n      expanded\n    },\n    onExpandedChange: setExpanded,\n    useVirtualScrolling: true\n  });\n  const {\n    rows\n  } = table.getRowModel();\n  return <>\n      <div>\n        <p>{table.getRowModel().rows.length} total rows</p>\n      </div>\n\n      <Table {...args} table={table} ref={tableContainerRef} className={virtualScrollingContainerHeight}>\n        <TableHead>\n          {table.getHeaderGroups().map((headerGroup: HeaderGroup<Person>) => <HeaderRow key={headerGroup.id}>\n              {headerGroup.headers.map(header => {\n            return <HeaderCell key={header.id} header={header}>\n                    {flexRender(header.column.columnDef.header, header.getContext())}\n                  </HeaderCell>;\n          })}\n            </HeaderRow>)}\n        </TableHead>\n        <TableBody>\n          {table.virtualRows && table.virtualRows.map((virtualRow: VirtualItem) => {\n          const row = rows[virtualRow.index];\n          const cells = row.getVisibleCells();\n          return <Row key={row.id} row={row} virtualRow={virtualRow}>\n                  {cells.map((cell: LeafyGreenTableCell<Person>) => {\n              return <Cell key={cell.id}>\n                        {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                      </Cell>;\n            })}\n                  {row.original.renderExpandedContent && <ExpandedContent row={row} />}\n                </Row>;\n        })}\n        </TableBody>\n      </Table>\n    </>;\n}"},null===(_ExpandableContent$pa2=ExpandableContent.parameters)||void 0===_ExpandableContent$pa2||null===(_ExpandableContent$pa3=_ExpandableContent$pa2.docs)||void 0===_ExpandableContent$pa3?void 0:_ExpandableContent$pa3.source)})});var __namedExportsOrder=["Basic","NestedRows","SortableRows","SelectableRows","ExpandableContent"]}}]);