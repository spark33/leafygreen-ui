"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5674],{"./packages/tooltip/src/Tooltip.story.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlignmentTest:()=>AlignmentTest,Basic:()=>Basic,ControlledWithState:()=>ControlledWithState,LongText:()=>LongText,ScrollableContainer:()=>ScrollableContainer,WithLeafyGreenChildren:()=>WithLeafyGreenChildren,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Tooltip_story});var react=__webpack_require__("./node_modules/react/index.js"),esm=__webpack_require__("./packages/button/dist/esm/index.js"),dist_esm=__webpack_require__("./packages/emotion/dist/esm/index.js"),icon_dist_esm=__webpack_require__("./packages/icon/dist/esm/index.js"),lib_dist_esm=__webpack_require__("./packages/lib/dist/esm/index.js"),tokens_dist_esm=__webpack_require__("./packages/tokens/dist/esm/index.js"),typography_dist_esm=__webpack_require__("./packages/typography/dist/esm/index.js"),debounce=__webpack_require__("./node_modules/lodash/debounce.js"),debounce_default=__webpack_require__.n(debounce),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),hooks_dist_esm=__webpack_require__("./packages/hooks/dist/esm/index.js"),leafygreen_provider_dist_esm=__webpack_require__("./packages/leafygreen-provider/dist/esm/index.js"),popover_dist_esm=__webpack_require__("./packages/popover/dist/esm/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function SvgNotch(props){return react.createElement("svg",_extends({width:26,height:8,fill:"#001E2B",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 26 8"},props),react.createElement("path",{d:"M27 0H-1v1h.699a10 10 0 017.26 3.123l1.685 1.78a6 6 0 008.712 0l1.686-1.78A10 10 0 0126.302 1H27V0z"}))}SvgNotch.displayName="SvgNotch";const Notch=SvgNotch;try{SvgNotch.displayName="SvgNotch",SvgNotch.__docgenInfo={description:"",displayName:"SvgNotch",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tooltip/src/Notch/Notch.tsx#SvgNotch"]={docgenInfo:SvgNotch.__docgenInfo,name:"SvgNotch",path:"packages/tooltip/src/Notch/Notch.tsx#SvgNotch"})}catch(__react_docgen_typescript_loader_error){}const src_Notch=Notch;var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_colorSet,_templateObject8,_templateObject9,polished_esm=__webpack_require__("./node_modules/polished/dist/polished.esm.js"),palette_dist_esm=__webpack_require__("./packages/palette/dist/esm/index.js"),notchHeight=8,notchWidth=26,borderRadius=16;function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var tooltipUtils_templateObject,tooltipUtils_templateObject2,tooltipUtils_templateObject3,Tooltip_templateObject,baseTypeStyle=(0,dist_esm.css)(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n  margin: unset;\n  font-family: ",";\n  color: ",";\n  font-weight: ",";\n  width: 100%;\n  overflow-wrap: anywhere;\n"])),tokens_dist_esm.Vl.default,palette_dist_esm.D.gray.light1,tokens_dist_esm.vC.regular),baseStyles=(0,dist_esm.css)(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n  display: flex;\n  align-items: center;\n  border-radius: ","px;\n  padding: 12px ","px;\n  box-shadow: 0px 2px 4px -1px ",";\n  cursor: default;\n  width: fit-content;\n  max-width: 256px;\n"])),borderRadius,borderRadius,(0,polished_esm.DZ)(.85,palette_dist_esm.D.black)),positionRelative=(0,dist_esm.css)(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["\n  position: relative;\n"]))),colorSet=(_defineProperty(_colorSet={},lib_dist_esm.Q2.Light,{tooltip:(0,dist_esm.css)(_templateObject4||(_templateObject4=_taggedTemplateLiteral(["\n      background-color: ",";\n      color: ",";\n    "])),palette_dist_esm.D.black,palette_dist_esm.D.gray.light1),children:(0,dist_esm.css)(_templateObject5||(_templateObject5=_taggedTemplateLiteral(["\n      color: inherit;\n    "]))),notchFill:palette_dist_esm.D.black}),_defineProperty(_colorSet,lib_dist_esm.Q2.Dark,{tooltip:(0,dist_esm.css)(_templateObject6||(_templateObject6=_taggedTemplateLiteral(["\n      background-color: ",";\n      color: ",";\n    "])),palette_dist_esm.D.gray.light2,palette_dist_esm.D.black),children:(0,dist_esm.css)(_templateObject7||(_templateObject7=_taggedTemplateLiteral(["\n      color: inherit;\n    "]))),notchFill:palette_dist_esm.D.gray.light2}),_colorSet),minSize=notchWidth+2*borderRadius,minHeightStyle=(0,dist_esm.css)(_templateObject8||(_templateObject8=_taggedTemplateLiteral(["\n  min-height: ","px;\n"])),minSize),transitionDelay=(0,dist_esm.css)(_templateObject9||(_templateObject9=_taggedTemplateLiteral(["\n  transition-delay: ","ms;\n"])),tokens_dist_esm.nV.slowest),TriggerEvent={Hover:"hover",Click:"click"},Align={Top:popover_dist_esm.xM.Top,Bottom:popover_dist_esm.xM.Bottom,Left:popover_dist_esm.xM.Left,Right:popover_dist_esm.xM.Right},clamp=__webpack_require__("./node_modules/lodash/clamp.js"),clamp_default=__webpack_require__.n(clamp);function tooltipUtils_taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function notchPositionStyles(_ref){var align=_ref.align,justify=_ref.justify,triggerRect=_ref.triggerRect;if(!align||!justify||!triggerRect)return{notchContainer:"",notch:"",tooltip:""};var notchOffsetActual,shouldTransformPosition,containerSize=notchWidth,notchOverlap=-(containerSize-notchHeight)/2,notchStyleObj={},containerStyleObj={},notchOffsetLowerBound=borderRadius,notchOffsetUpperBound=2*notchOffsetLowerBound,notchOffset=0,tooltipOffsetTransform="";switch(align){case"top":case"bottom":switch(notchOffsetUpperBound=3*notchOffsetLowerBound,notchOffsetActual=triggerRect.width/2-containerSize/2,notchOffset=clamp_default()(notchOffsetActual,notchOffsetLowerBound,notchOffsetUpperBound),shouldTransformPosition=notchOffsetActual<=notchOffsetLowerBound,notchStyleObj.left="0px",notchStyleObj.right="0px","top"===align?(containerStyleObj.top="calc(100% - 1px)",notchStyleObj.top="".concat(notchOverlap,"px")):(containerStyleObj.bottom="calc(100% - 1px)",notchStyleObj.bottom="".concat(notchOverlap,"px"),notchStyleObj.transform="rotate(180deg)"),justify){case popover_dist_esm.WD.Start:containerStyleObj.left="".concat(notchOffset,"px"),shouldTransformPosition&&(tooltipOffsetTransform="translateX(-".concat(notchOffsetLowerBound-notchOffsetActual,"px)"));break;case popover_dist_esm.WD.Middle:containerStyleObj.left="0px",containerStyleObj.right="0px";break;case popover_dist_esm.WD.Fit:containerStyleObj.left="".concat(notchOffset,"px"),shouldTransformPosition&&(tooltipOffsetTransform="translateX(-".concat(notchOffsetLowerBound-notchOffsetActual,"px)"));break;case popover_dist_esm.WD.End:containerStyleObj.right="".concat(notchOffset,"px"),shouldTransformPosition&&(tooltipOffsetTransform="translateX(".concat(notchOffsetLowerBound-notchOffsetActual,"px)"))}break;case"left":case"right":switch(notchOffsetUpperBound=2*notchOffsetLowerBound,notchOffsetActual=triggerRect.height/2-containerSize/2,notchOffset=clamp_default()(notchOffsetActual,notchOffsetLowerBound,notchOffsetUpperBound),shouldTransformPosition=notchOffsetActual<=notchOffsetLowerBound,notchStyleObj.top="0px",notchStyleObj.bottom="0px","left"===align?(containerStyleObj.left="calc(100% - 1px)",notchStyleObj.left="".concat(notchOverlap,"px"),notchStyleObj.transform="rotate(-90deg)"):(containerStyleObj.right="calc(100% - 1px)",notchStyleObj.right="".concat(notchOverlap,"px"),notchStyleObj.transform="rotate(90deg)"),justify){case popover_dist_esm.WD.Start:containerStyleObj.top="".concat(notchOffset,"px"),shouldTransformPosition&&(tooltipOffsetTransform="translateY(-".concat(notchOffsetLowerBound-notchOffsetActual,"px)"));break;case popover_dist_esm.WD.Middle:containerStyleObj.top="0px",containerStyleObj.bottom="0px";break;case popover_dist_esm.WD.Fit:containerStyleObj.top="".concat(notchOffset,"px"),shouldTransformPosition&&(tooltipOffsetTransform="translateY(-".concat(notchOffsetLowerBound-notchOffsetActual,"px)"));break;case popover_dist_esm.WD.End:containerStyleObj.bottom="".concat(notchOffset,"px"),shouldTransformPosition&&(tooltipOffsetTransform="translateY(".concat(notchOffsetLowerBound-notchOffsetActual,"px)"))}}return{notchContainer:(0,dist_esm.css)(tooltipUtils_templateObject||(tooltipUtils_templateObject=tooltipUtils_taggedTemplateLiteral(["\n      position: absolute;\n      width: ","px;\n      height: ","px;\n      overflow: hidden;\n      margin: auto;\n      pointer-events: none;\n      ",";\n    "])),containerSize,containerSize,(0,dist_esm.css)(containerStyleObj)),notch:(0,dist_esm.css)(tooltipUtils_templateObject2||(tooltipUtils_templateObject2=tooltipUtils_taggedTemplateLiteral(["\n      ",";\n      position: absolute;\n      width: ","px;\n      height: ","px; // Keep it square. Rotating is simpler\n      margin: 0;\n    "])),(0,dist_esm.css)(notchStyleObj),notchWidth,notchWidth),tooltip:(0,dist_esm.css)(tooltipUtils_templateObject3||(tooltipUtils_templateObject3=tooltipUtils_taggedTemplateLiteral(["\n      min-width: ","px;\n      transform: ",";\n    "])),2*notchOffset+containerSize,tooltipOffsetTransform)}}try{notchPositionStyles.displayName="notchPositionStyles",notchPositionStyles.__docgenInfo={description:"",displayName:"notchPositionStyles",props:{align:{defaultValue:null,description:"",name:"align",required:!0,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"center-vertical"'},{value:'"center-horizontal"'}]}},justify:{defaultValue:null,description:"",name:"justify",required:!0,type:{name:"enum",value:[{value:'"start"'},{value:'"middle"'},{value:'"end"'},{value:'"fit"'}]}},triggerRect:{defaultValue:null,description:"",name:"triggerRect",required:!0,type:{name:"DOMRect | ElementPosition | ClientRect | null"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tooltip/src/Tooltip/tooltipUtils.tsx#notchPositionStyles"]={docgenInfo:notchPositionStyles.__docgenInfo,name:"notchPositionStyles",path:"packages/tooltip/src/Tooltip/tooltipUtils.tsx#notchPositionStyles"})}catch(__react_docgen_typescript_loader_error){}function Tooltip_typeof(obj){return Tooltip_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},Tooltip_typeof(obj)}var _excluded=["open","setOpen","darkMode","baseFontSize","triggerEvent","enabled","align","justify","spacing","usePortal","onClose","id","shouldClose","portalClassName","portalContainer","scrollContainer","popoverZIndex","refEl","className","children","trigger"];function Tooltip_extends(){return Tooltip_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Tooltip_extends.apply(this,arguments)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){Tooltip_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function Tooltip_defineProperty(obj,key,value){return(key=function Tooltip_toPropertyKey(arg){var key=function Tooltip_toPrimitive(input,hint){if("object"!==Tooltip_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==Tooltip_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===Tooltip_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i)return;_n=!1}else for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=_i.return&&(_r=_i.return(),Object(_r)!==_r))return}finally{if(_d)throw _e}}return _arr}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var stopClickPropagation=function stopClickPropagation(evt){evt.stopPropagation()};function Tooltip(_ref){var _tooltipRef$current,controlledOpen=_ref.open,controlledSetOpen=_ref.setOpen,darkThemeProp=_ref.darkMode,baseFontSizeOverride=_ref.baseFontSize,_ref$triggerEvent=_ref.triggerEvent,triggerEvent=void 0===_ref$triggerEvent?TriggerEvent.Hover:_ref$triggerEvent,_ref$enabled=_ref.enabled,enabled=void 0===_ref$enabled||_ref$enabled,_ref$align=_ref.align,align=void 0===_ref$align?"top":_ref$align,_ref$justify=_ref.justify,justify=void 0===_ref$justify?"start":_ref$justify,_ref$spacing=_ref.spacing,spacing=void 0===_ref$spacing?12:_ref$spacing,_ref$usePortal=_ref.usePortal,usePortal=void 0===_ref$usePortal||_ref$usePortal,_ref$onClose=_ref.onClose,onClose=void 0===_ref$onClose?function(){}:_ref$onClose,id=_ref.id,shouldClose=_ref.shouldClose,portalClassName=_ref.portalClassName,portalContainer=_ref.portalContainer,scrollContainer=_ref.scrollContainer,popoverZIndex=_ref.popoverZIndex,refEl=_ref.refEl,className=_ref.className,children=_ref.children,trigger=_ref.trigger,rest=_objectWithoutProperties(_ref,_excluded),isControlled="boolean"==typeof controlledOpen,_useState2=_slicedToArray((0,react.useState)(!1),2),uncontrolledOpen=_useState2[0],uncontrolledSetOpen=_useState2[1],size=(0,typography_dist_esm.hN)(baseFontSizeOverride),open=isControlled?controlledOpen:uncontrolledOpen,setOpen=isControlled&&controlledSetOpen?controlledSetOpen:uncontrolledSetOpen,tooltipRef=(0,react.useRef)(null),existingId=null!=id?id:null===(_tooltipRef$current=tooltipRef.current)||void 0===_tooltipRef$current?void 0:_tooltipRef$current.id,tooltipId=(0,hooks_dist_esm.ue)({prefix:"tooltip",id:existingId}),_useDarkMode=(0,leafygreen_provider_dist_esm.vs)(darkThemeProp),localDarkMode=_useDarkMode.darkMode,theme=_useDarkMode.theme;(0,react.useEffect)((function(){trigger&&(0,icon_dist_esm.fx)(trigger)&&console.warn("Using a LeafyGreenUI Icon or Glyph component as a trigger will not render a Tooltip, as these components do not render their children. To use, please wrap your trigger element in another HTML tag.")}),[trigger]);var handleClose=(0,react.useCallback)((function(){("function"!=typeof shouldClose||shouldClose())&&(onClose(),setOpen(!1))}),[setOpen,shouldClose,onClose]),createTriggerProps=(0,react.useCallback)((function(triggerEvent,triggerProps){return triggerEvent===TriggerEvent.Hover?{onMouseEnter:debounce_default()((function(e){userTriggerHandler("onMouseEnter",e),setOpen(!0)}),35),onMouseLeave:debounce_default()((function(e){userTriggerHandler("onMouseLeave",e),handleClose()}),35),onFocus:function onFocus(e){userTriggerHandler("onFocus",e),setOpen(!0)},onBlur:function onBlur(e){userTriggerHandler("onBlur",e),handleClose()}}:{onClick:function onClick(e){e.target!==tooltipRef.current&&(userTriggerHandler("onClick",e),setOpen((function(curr){return!curr})))}};function userTriggerHandler(handler,e){triggerProps&&triggerProps[handler]&&"function"==typeof triggerProps[handler]&&triggerProps[handler](e)}}),[handleClose,setOpen,tooltipRef]);(0,hooks_dist_esm.qX)(handleClose,{enabled:open}),(0,hooks_dist_esm.Sj)(handleClose,[tooltipRef],open&&"click"===triggerEvent);var strings,raw,popoverProps=_objectSpread({refEl,popoverZIndex},usePortal?{spacing,usePortal,portalClassName,portalContainer,scrollContainer}:{spacing,usePortal}),active=enabled&&open,isLeftOrRightAligned=["left","right"].includes(align),tooltip=react.createElement(popover_dist_esm.ZP,Tooltip_extends({key:"tooltip",active,align,justify,adjustOnMutation:!0,onClick:stopClickPropagation,className:(0,dist_esm.cx)(transitionDelay,Tooltip_defineProperty({},(0,dist_esm.css)(Tooltip_templateObject||(strings=["\n          // Try to fit all the content on one line (until it hits max-width)\n          // Overrides default behavior, which is to set width to size of the trigger.\n          // Except when justify is set to fit because the width should be the size of the trigger.\n          // Another exception is when justify is set to fit and the alignment is either left or right. In this case only the height should be the size of the trigger so we still want the width to fit the max content.\n          width: max-content;\n        "],raw||(raw=strings.slice(0)),Tooltip_templateObject=Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}})))),justify!==popover_dist_esm.WD.Fit||justify===popover_dist_esm.WD.Fit&&(align===popover_dist_esm.xM.Left||align===popover_dist_esm.xM.Right)))},popoverProps),(function(_ref2){var _notchPositionStyles=notchPositionStyles({align:_ref2.align,justify:_ref2.justify,triggerRect:_ref2.referenceElPos}),notchContainerStyle=_notchPositionStyles.notchContainer,notchStyle=_notchPositionStyles.notch,tooltipNotchStyle=_notchPositionStyles.tooltip;return react.createElement(leafygreen_provider_dist_esm.ZP,{darkMode:!localDarkMode},react.createElement("div",Tooltip_extends({role:"tooltip"},rest,{id:tooltipId,className:(0,dist_esm.cx)(baseStyles,tooltipNotchStyle,colorSet[theme].tooltip,Tooltip_defineProperty({},minHeightStyle,isLeftOrRightAligned),className),ref:tooltipRef}),react.createElement("div",{className:(0,dist_esm.cx)(baseTypeStyle,typography_dist_esm.dF[size],colorSet[theme].children)},children),react.createElement("div",{className:notchContainerStyle},react.createElement(src_Notch,{className:(0,dist_esm.cx)(notchStyle),fill:colorSet[theme].notchFill}))))}));return trigger?"function"==typeof trigger?trigger(_objectSpread(_objectSpread({},createTriggerProps(triggerEvent)),{},{className:positionRelative,"aria-describedby":active?tooltipId:void 0,children:tooltip})):react.cloneElement(trigger,_objectSpread(_objectSpread({},createTriggerProps(triggerEvent,trigger.props)),{},{"aria-describedby":active?tooltipId:void 0,children:react.createElement(react.Fragment,null,trigger.props.children,tooltip),className:(0,dist_esm.cx)(positionRelative,trigger.props.className)})):tooltip}Tooltip.displayName="Tooltip",Tooltip.propTypes={children:prop_types_default().node,className:prop_types_default().string,align:prop_types_default().oneOf(Object.values(popover_dist_esm.xM)),justify:prop_types_default().oneOf(Object.values(popover_dist_esm.WD)),trigger:prop_types_default().oneOfType([prop_types_default().node,prop_types_default().func]),triggerEvent:prop_types_default().oneOf(Object.values(TriggerEvent)),darkMode:prop_types_default().bool,enabled:prop_types_default().bool,open:prop_types_default().bool,setOpen:prop_types_default().func,id:prop_types_default().string,shouldClose:prop_types_default().func,usePortal:prop_types_default().bool,portalClassName:prop_types_default().string};const Tooltip_Tooltip=Tooltip;try{Tooltip.displayName="Tooltip",Tooltip.__docgenInfo={description:"# Tooltip\n\nTooltip component\n\n```\n<Tooltip\nalign='top'\njustify='start'\ntrigger={<button>trigger</button>}\ntriggerEvent='hover'\n>\nI am an uncontrolled Tooltip!\n</Tooltip>\n```",displayName:"Tooltip",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"undefined"}},children:{defaultValue:null,description:"Content that will appear inside of the popover component.",name:"children",required:!0,type:{name:"ReactNode | ((Options: ChildrenFunctionParameters) => ReactNode)"}},className:{defaultValue:null,description:"Class name applied to popover content container.",name:"className",required:!1,type:{name:"string | undefined"}},align:{defaultValue:{value:"top"},description:"Determines the alignment of the popover content relative to the trigger element\n\ndefault: `bottom`",name:"align",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"center-vertical"'},{value:'"center-horizontal"'}]}},justify:{defaultValue:{value:"start"},description:"Determines the justification of the popover content relative to the trigger element\n\ndefault: `start`",name:"justify",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"start"'},{value:'"middle"'},{value:'"end"'},{value:'"fit"'}]}},usePortal:{defaultValue:{value:"true"},description:"Specifies that the popover content should be rendered at the end of the DOM,\nrather than in the DOM tree.\n\ndefault: `true`",name:"usePortal",required:!1,type:{name:"boolean | undefined"}},portalClassName:{defaultValue:null,description:"When usePortal is `true`, specifies a class name to apply to the root element of the portal.",name:"portalClassName",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"Click event handler passed to the root div element within the portal container.",name:"onClick",required:!1,type:{name:"MouseEventHandler<Element> | undefined"}},refEl:{defaultValue:null,description:"A reference to the element against which the popover component will be positioned.",name:"refEl",required:!1,type:{name:"RefObject<HTMLElement> | undefined"}},spacing:{defaultValue:{value:"12"},description:"Specifies the amount of spacing (in pixels) between the trigger element and the Popover content.\n\ndefault: `10`",name:"spacing",required:!1,type:{name:"number | undefined"}},popoverZIndex:{defaultValue:null,description:"Number that controls the z-index of the popover element directly.",name:"popoverZIndex",required:!1,type:{name:"number | undefined"}},portalContainer:{defaultValue:null,description:"When usePortal is `true`, specifies an element to portal within. The default behavior is to generate a div at the end of the document to render within.",name:"portalContainer",required:!1,type:{name:"HTMLElement | null | undefined"}},scrollContainer:{defaultValue:null,description:"When usePortal is `true`, specifies the scrollable element to position relative to.",name:"scrollContainer",required:!1,type:{name:"HTMLElement | null | undefined"}},trigger:{defaultValue:null,description:"A slot for the element used to trigger the `Tooltip`.",name:"trigger",required:!1,type:{name:"Function | ReactElement<any, string | JSXElementConstructor<any>> | undefined"}},triggerEvent:{defaultValue:{value:"hover"},description:"Determines if a `hover` or `click` event will trigger the opening of a `Tooltip`.",name:"triggerEvent",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"hover"'},{value:'"click"'}]}},open:{defaultValue:{value:"`false`"},description:"Controls component and determines the open state of the `Tooltip`",name:"open",required:!1,type:{name:"boolean | undefined"}},setOpen:{defaultValue:null,description:"Callback to change the open state of the `Tooltip`.",name:"setOpen",required:!1,type:{name:"Dispatch<SetStateAction<boolean>> | undefined"}},darkMode:{defaultValue:{value:"false"},description:"Whether the `Tooltip` will appear in dark mode.",name:"darkMode",required:!1,type:{name:"boolean | undefined"}},shouldClose:{defaultValue:null,description:"Callback to determine whether or not `Tooltip` should close when user tries to close it.",name:"shouldClose",required:!1,type:{name:"(() => boolean) | undefined"}},enabled:{defaultValue:{value:"true"},description:"Enables Tooltip to trigger based on the event specified by `triggerEvent`.",name:"enabled",required:!1,type:{name:"boolean | undefined"}},onClose:{defaultValue:{value:"() => {}"},description:"Callback that is called when the tooltip is closed internally. E.g. on ESC press, on backdrop click, on blur.",name:"onClose",required:!1,type:{name:"(() => void) | undefined"}},baseFontSize:{defaultValue:null,description:"Allows consuming applications to override font-size as set by the LeafyGreen Provider.",name:"baseFontSize",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:"16"},{value:"13"}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tooltip/src/Tooltip/Tooltip.tsx#Tooltip"]={docgenInfo:Tooltip.__docgenInfo,name:"Tooltip",path:"packages/tooltip/src/Tooltip/Tooltip.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}const src=Tooltip_Tooltip;function Tooltip_story_typeof(obj){return Tooltip_story_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},Tooltip_story_typeof(obj)}var Tooltip_story_templateObject,Tooltip_story_templateObject2,Tooltip_story_templateObject3,Tooltip_story_templateObject4,Tooltip_story_templateObject5,Tooltip_story_templateObject6,Tooltip_story_templateObject7,Tooltip_story_templateObject8,Tooltip_story_templateObject9,_Basic$parameters,_Basic$parameters2,_Basic$parameters2$do,_ControlledWithState$,_ControlledWithState$2,_ControlledWithState$3,_WithLeafyGreenChildr,_WithLeafyGreenChildr2,_WithLeafyGreenChildr3,_AlignmentTest$parame,_AlignmentTest$parame2,_AlignmentTest$parame3,_LongText$parameters,_LongText$parameters2,_LongText$parameters3,_ScrollableContainer$,_ScrollableContainer$2,_ScrollableContainer$3,Tooltip_story_excluded=["darkMode"],_excluded2=["darkMode"],_excluded3=["refButtonPosition","buttonText","justify","align"];function Tooltip_story_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function Tooltip_story_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?Tooltip_story_ownKeys(Object(source),!0).forEach((function(key){Tooltip_story_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):Tooltip_story_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function Tooltip_story_defineProperty(obj,key,value){return(key=function Tooltip_story_toPropertyKey(arg){var key=function Tooltip_story_toPrimitive(input,hint){if("object"!==Tooltip_story_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==Tooltip_story_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===Tooltip_story_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Tooltip_story_slicedToArray(arr,i){return function Tooltip_story_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function Tooltip_story_iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i)return;_n=!1}else for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=_i.return&&(_r=_i.return(),Object(_r)!==_r))return}finally{if(_d)throw _e}}return _arr}}(arr,i)||Tooltip_story_unsupportedIterableToArray(arr,i)||function Tooltip_story_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Tooltip_story_extends(){return Tooltip_story_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Tooltip_story_extends.apply(this,arguments)}function Tooltip_story_taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function Tooltip_story_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function Tooltip_story_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function Tooltip_story_unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return Tooltip_story_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Tooltip_story_arrayLikeToArray(o,minLen):void 0}}function Tooltip_story_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}const Tooltip_story={title:"Components/Tooltip",component:src,args:{children:"I am a tooltip!",trigger:react.createElement(esm.ZP,null,"trigger"),enabled:!0,usePortal:!0},argTypes:{open:{control:"boolean"},darkMode:lib_dist_esm.bN.darkMode,children:lib_dist_esm.bN.children,baseFontSize:{control:"radio",options:Object.values(tokens_dist_esm.Y2)}},parameters:{default:"Basic",controls:{exclude:[].concat(function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return Tooltip_story_arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||Tooltip_story_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(lib_dist_esm.xZ),["trigger"])}}};var Basic=function Basic(_ref){var darkMode=_ref.darkMode,args=Tooltip_story_objectWithoutProperties(_ref,Tooltip_story_excluded);return react.createElement("div",{className:(0,dist_esm.css)(Tooltip_story_templateObject||(Tooltip_story_templateObject=Tooltip_story_taggedTemplateLiteral(["\n      padding: 100px;\n    "])))},react.createElement(src,Tooltip_story_extends({darkMode},args)))};Basic.displayName="Basic",Basic.argTypes={open:{control:"none"}};var ControlledWithState=function ControlledWithState(args){var _useState2=Tooltip_story_slicedToArray((0,react.useState)(!0),2),open=_useState2[0],setOpen=_useState2[1];return react.createElement(src,Tooltip_story_extends({},args,{open,setOpen}))};ControlledWithState.displayName="ControlledWithState";var WithLeafyGreenChildren=Basic.bind({});WithLeafyGreenChildren.args={children:react.createElement(react.Fragment,null,react.createElement(typography_dist_esm.QE,null,"Example"),react.createElement(typography_dist_esm.uT,null,"Use Tooltip in your codebase:"),react.createElement(typography_dist_esm.ZM,null,"@leafygreen-ui/tooltip"))};var AlignmentTest=function AlignmentTest(_ref2){var darkMode=_ref2.darkMode,args=Tooltip_story_objectWithoutProperties(_ref2,_excluded2);return react.createElement("div",{className:(0,dist_esm.css)(Tooltip_story_templateObject2||(Tooltip_story_templateObject2=Tooltip_story_taggedTemplateLiteral(["\n        display: grid;\n        grid-template-columns: repeat(4, 64px);\n        grid-template-rows: repeat(4, 64px);\n        width: 100%;\n        gap: 64px;\n        align-items: center;\n        justify-items: center;\n        justify-content: center;\n        padding: 96px;\n      "])))},Object.values(Align).map((function(a){return Object.values(popover_dist_esm.WD).map((function(j){return react.createElement(src,Tooltip_story_extends({},args,{key:a+j,darkMode,align:a,justify:j,triggerEvent:"click"}),"Align ",a,", Justify ",j,".")}))})))};AlignmentTest.displayName="AlignmentTest";var LongText=Basic.bind({});LongText.args={children:"5hhs8d83jj2992h88d9s49ns94jsjsj9456j9djdf95hhs8d83jj2992h88d9s49ns94jsjsj9456j9djdf9"};var scrollableStyle=(0,dist_esm.css)(Tooltip_story_templateObject3||(Tooltip_story_templateObject3=Tooltip_story_taggedTemplateLiteral(["\n  width: 600px;\n  height: 80vh;\n  background-color: #e8edeb;\n  overflow: scroll;\n  position: relative;\n"]))),scrollableInnerStyle=(0,dist_esm.css)(Tooltip_story_templateObject4||(Tooltip_story_templateObject4=Tooltip_story_taggedTemplateLiteral(["\n  position: relative;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"]))),referenceElPositions={centered:(0,dist_esm.css)(Tooltip_story_templateObject5||(Tooltip_story_templateObject5=Tooltip_story_taggedTemplateLiteral(["\n    position: relative;\n  "]))),top:(0,dist_esm.css)(Tooltip_story_templateObject6||(Tooltip_story_templateObject6=Tooltip_story_taggedTemplateLiteral(["\n    top: 20px;\n    position: absolute;\n  "]))),right:(0,dist_esm.css)(Tooltip_story_templateObject7||(Tooltip_story_templateObject7=Tooltip_story_taggedTemplateLiteral(["\n    right: 20px;\n    position: absolute;\n  "]))),bottom:(0,dist_esm.css)(Tooltip_story_templateObject8||(Tooltip_story_templateObject8=Tooltip_story_taggedTemplateLiteral(["\n    bottom: 20px;\n    position: absolute;\n  "]))),left:(0,dist_esm.css)(Tooltip_story_templateObject9||(Tooltip_story_templateObject9=Tooltip_story_taggedTemplateLiteral(["\n    left: 20px;\n    position: absolute;\n  "])))},ScrollableContainer=function ScrollableContainer(_ref3){var refButtonPosition=_ref3.refButtonPosition,justify=(_ref3.buttonText,_ref3.justify),align=_ref3.align,args=Tooltip_story_objectWithoutProperties(_ref3,_excluded3),_useState4=Tooltip_story_slicedToArray((0,react.useState)(null),2),portalContainer=_useState4[0],setPortalContainer=_useState4[1],position=referenceElPositions[refButtonPosition];return react.createElement("div",{className:scrollableStyle},react.createElement("div",{className:scrollableInnerStyle,ref:function ref(el){return setPortalContainer(el)}},react.createElement("div",{className:position},react.createElement(src,Tooltip_story_extends({trigger:react.createElement("span",null,react.createElement(icon_dist_esm.ZP,{glyph:"Cloud"})),portalContainer,scrollContainer:portalContainer,triggerEvent:"click",justify,align},args),"I am a Tooltip! Lorem ipsum dolor sit amet, consectetur adipiscing elit"))))};ScrollableContainer.displayName="ScrollableContainer",ScrollableContainer.args={usePortal:!0},ScrollableContainer.argTypes={refButtonPosition:{options:["centered","top","right","bottom","left"],control:{type:"select"},description:"Storybook only prop. Used to change position of the reference button",defaultValue:"centered"},usePortal:{control:"none"},portalClassName:{control:"none"},refEl:{control:"none"},className:{control:"none"},active:{control:"none"},trigger:{control:"none"},triggerEvent:{control:"none"},enabled:{control:"none"},open:{control:"none"},setOpen:{control:"none"},children:{control:"none"},darkMode:{control:"none"}},Basic.parameters=Tooltip_story_objectSpread(Tooltip_story_objectSpread({},Basic.parameters),{},{docs:Tooltip_story_objectSpread(Tooltip_story_objectSpread({},null===(_Basic$parameters=Basic.parameters)||void 0===_Basic$parameters?void 0:_Basic$parameters.docs),{},{source:Tooltip_story_objectSpread({originalSource:"({\n  darkMode,\n  ...args\n}: TooltipProps) => <div className={css`\n      padding: 100px;\n    `}>\n    <Tooltip darkMode={darkMode} {...args} />\n  </div>"},null===(_Basic$parameters2=Basic.parameters)||void 0===_Basic$parameters2||null===(_Basic$parameters2$do=_Basic$parameters2.docs)||void 0===_Basic$parameters2$do?void 0:_Basic$parameters2$do.source)})}),ControlledWithState.parameters=Tooltip_story_objectSpread(Tooltip_story_objectSpread({},ControlledWithState.parameters),{},{docs:Tooltip_story_objectSpread(Tooltip_story_objectSpread({},null===(_ControlledWithState$=ControlledWithState.parameters)||void 0===_ControlledWithState$?void 0:_ControlledWithState$.docs),{},{source:Tooltip_story_objectSpread({originalSource:"(args: TooltipProps) => {\n  const [open, setOpen] = useState(true);\n  return <Tooltip {...args} open={open} setOpen={setOpen} />;\n}"},null===(_ControlledWithState$2=ControlledWithState.parameters)||void 0===_ControlledWithState$2||null===(_ControlledWithState$3=_ControlledWithState$2.docs)||void 0===_ControlledWithState$3?void 0:_ControlledWithState$3.source)})}),WithLeafyGreenChildren.parameters=Tooltip_story_objectSpread(Tooltip_story_objectSpread({},WithLeafyGreenChildren.parameters),{},{docs:Tooltip_story_objectSpread(Tooltip_story_objectSpread({},null===(_WithLeafyGreenChildr=WithLeafyGreenChildren.parameters)||void 0===_WithLeafyGreenChildr?void 0:_WithLeafyGreenChildr.docs),{},{source:Tooltip_story_objectSpread({originalSource:"({\n  darkMode,\n  ...args\n}: TooltipProps) => <div className={css`\n      padding: 100px;\n    `}>\n    <Tooltip darkMode={darkMode} {...args} />\n  </div>"},null===(_WithLeafyGreenChildr2=WithLeafyGreenChildren.parameters)||void 0===_WithLeafyGreenChildr2||null===(_WithLeafyGreenChildr3=_WithLeafyGreenChildr2.docs)||void 0===_WithLeafyGreenChildr3?void 0:_WithLeafyGreenChildr3.source)})}),AlignmentTest.parameters=Tooltip_story_objectSpread(Tooltip_story_objectSpread({},AlignmentTest.parameters),{},{docs:Tooltip_story_objectSpread(Tooltip_story_objectSpread({},null===(_AlignmentTest$parame=AlignmentTest.parameters)||void 0===_AlignmentTest$parame?void 0:_AlignmentTest$parame.docs),{},{source:Tooltip_story_objectSpread({originalSource:'({\n  darkMode,\n  ...args\n}: TooltipProps) => {\n  return <div className={css`\n        display: grid;\n        grid-template-columns: repeat(4, 64px);\n        grid-template-rows: repeat(4, 64px);\n        width: 100%;\n        gap: 64px;\n        align-items: center;\n        justify-items: center;\n        justify-content: center;\n        padding: 96px;\n      `}>\n      {Object.values(Align).map(a => Object.values(Justify).map(j => <Tooltip {...args} key={a + j} darkMode={darkMode} align={a} justify={j} triggerEvent="click">\n            Align {a}, Justify {j}.\n          </Tooltip>))}\n    </div>;\n}'},null===(_AlignmentTest$parame2=AlignmentTest.parameters)||void 0===_AlignmentTest$parame2||null===(_AlignmentTest$parame3=_AlignmentTest$parame2.docs)||void 0===_AlignmentTest$parame3?void 0:_AlignmentTest$parame3.source)})}),LongText.parameters=Tooltip_story_objectSpread(Tooltip_story_objectSpread({},LongText.parameters),{},{docs:Tooltip_story_objectSpread(Tooltip_story_objectSpread({},null===(_LongText$parameters=LongText.parameters)||void 0===_LongText$parameters?void 0:_LongText$parameters.docs),{},{source:Tooltip_story_objectSpread({originalSource:"({\n  darkMode,\n  ...args\n}: TooltipProps) => <div className={css`\n      padding: 100px;\n    `}>\n    <Tooltip darkMode={darkMode} {...args} />\n  </div>"},null===(_LongText$parameters2=LongText.parameters)||void 0===_LongText$parameters2||null===(_LongText$parameters3=_LongText$parameters2.docs)||void 0===_LongText$parameters3?void 0:_LongText$parameters3.source)})}),ScrollableContainer.parameters=Tooltip_story_objectSpread(Tooltip_story_objectSpread({},ScrollableContainer.parameters),{},{docs:Tooltip_story_objectSpread(Tooltip_story_objectSpread({},null===(_ScrollableContainer$=ScrollableContainer.parameters)||void 0===_ScrollableContainer$?void 0:_ScrollableContainer$.docs),{},{source:Tooltip_story_objectSpread({originalSource:'({\n  refButtonPosition,\n  buttonText,\n  justify,\n  align,\n  ...args\n}: TooltipScrollableProps) => {\n  const [portalContainer, setPortalContainer] = useState<HTMLDivElement | null>(null);\n  const position = referenceElPositions[refButtonPosition];\n  return <div className={scrollableStyle}>\n      <div className={scrollableInnerStyle} ref={el => setPortalContainer(el)}>\n        <div className={position}>\n          <Tooltip trigger={<span>\n                <Icon glyph="Cloud" />\n              </span>} portalContainer={portalContainer} scrollContainer={portalContainer} triggerEvent="click" justify={justify} align={align} {...args}>\n            I am a Tooltip! Lorem ipsum dolor sit amet, consectetur adipiscing\n            elit\n          </Tooltip>\n        </div>\n      </div>\n    </div>;\n}'},null===(_ScrollableContainer$2=ScrollableContainer.parameters)||void 0===_ScrollableContainer$2||null===(_ScrollableContainer$3=_ScrollableContainer$2.docs)||void 0===_ScrollableContainer$3?void 0:_ScrollableContainer$3.source)})});var __namedExportsOrder=["Basic","ControlledWithState","WithLeafyGreenChildren","AlignmentTest","LongText","ScrollableContainer"];try{ControlledWithState.displayName="ControlledWithState",ControlledWithState.__docgenInfo={description:"",displayName:"ControlledWithState",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"undefined"}},children:{defaultValue:null,description:"Content that will appear inside of the popover component.",name:"children",required:!0,type:{name:"ReactNode | ((Options: ChildrenFunctionParameters) => ReactNode)"}},className:{defaultValue:null,description:"Class name applied to popover content container.",name:"className",required:!1,type:{name:"string | undefined"}},align:{defaultValue:null,description:"Determines the alignment of the popover content relative to the trigger element\n\ndefault: `bottom`",name:"align",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"center-vertical"'},{value:'"center-horizontal"'}]}},justify:{defaultValue:null,description:"Determines the justification of the popover content relative to the trigger element\n\ndefault: `start`",name:"justify",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"start"'},{value:'"middle"'},{value:'"end"'},{value:'"fit"'}]}},usePortal:{defaultValue:null,description:"Specifies that the popover content should be rendered at the end of the DOM,\nrather than in the DOM tree.\n\ndefault: `true`",name:"usePortal",required:!1,type:{name:"boolean | undefined"}},portalClassName:{defaultValue:null,description:"When usePortal is `true`, specifies a class name to apply to the root element of the portal.",name:"portalClassName",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"Click event handler passed to the root div element within the portal container.",name:"onClick",required:!1,type:{name:"MouseEventHandler<Element> | undefined"}},refEl:{defaultValue:null,description:"A reference to the element against which the popover component will be positioned.",name:"refEl",required:!1,type:{name:"RefObject<HTMLElement> | undefined"}},spacing:{defaultValue:null,description:"Specifies the amount of spacing (in pixels) between the trigger element and the Popover content.\n\ndefault: `10`",name:"spacing",required:!1,type:{name:"number | undefined"}},popoverZIndex:{defaultValue:null,description:"Number that controls the z-index of the popover element directly.",name:"popoverZIndex",required:!1,type:{name:"number | undefined"}},portalContainer:{defaultValue:null,description:"When usePortal is `true`, specifies an element to portal within. The default behavior is to generate a div at the end of the document to render within.",name:"portalContainer",required:!1,type:{name:"HTMLElement | null | undefined"}},scrollContainer:{defaultValue:null,description:"When usePortal is `true`, specifies the scrollable element to position relative to.",name:"scrollContainer",required:!1,type:{name:"HTMLElement | null | undefined"}},trigger:{defaultValue:null,description:"A slot for the element used to trigger the `Tooltip`.",name:"trigger",required:!1,type:{name:"Function | ReactElement<any, string | JSXElementConstructor<any>> | undefined"}},triggerEvent:{defaultValue:{value:"'hover'"},description:"Determines if a `hover` or `click` event will trigger the opening of a `Tooltip`.",name:"triggerEvent",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"hover"'},{value:'"click"'}]}},open:{defaultValue:{value:"`false`"},description:"Controls component and determines the open state of the `Tooltip`",name:"open",required:!1,type:{name:"boolean | undefined"}},setOpen:{defaultValue:null,description:"Callback to change the open state of the `Tooltip`.",name:"setOpen",required:!1,type:{name:"Dispatch<SetStateAction<boolean>> | undefined"}},darkMode:{defaultValue:{value:"false"},description:"Whether the `Tooltip` will appear in dark mode.",name:"darkMode",required:!1,type:{name:"boolean | undefined"}},shouldClose:{defaultValue:null,description:"Callback to determine whether or not `Tooltip` should close when user tries to close it.",name:"shouldClose",required:!1,type:{name:"(() => boolean) | undefined"}},enabled:{defaultValue:{value:"true"},description:"Enables Tooltip to trigger based on the event specified by `triggerEvent`.",name:"enabled",required:!1,type:{name:"boolean | undefined"}},onClose:{defaultValue:null,description:"Callback that is called when the tooltip is closed internally. E.g. on ESC press, on backdrop click, on blur.",name:"onClose",required:!1,type:{name:"(() => void) | undefined"}},baseFontSize:{defaultValue:null,description:"Allows consuming applications to override font-size as set by the LeafyGreen Provider.",name:"baseFontSize",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:"16"},{value:"13"}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tooltip/src/Tooltip.story.tsx#ControlledWithState"]={docgenInfo:ControlledWithState.__docgenInfo,name:"ControlledWithState",path:"packages/tooltip/src/Tooltip.story.tsx#ControlledWithState"})}catch(__react_docgen_typescript_loader_error){}try{AlignmentTest.displayName="AlignmentTest",AlignmentTest.__docgenInfo={description:"",displayName:"AlignmentTest",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"undefined"}},children:{defaultValue:null,description:"Content that will appear inside of the popover component.",name:"children",required:!0,type:{name:"ReactNode | ((Options: ChildrenFunctionParameters) => ReactNode)"}},className:{defaultValue:null,description:"Class name applied to popover content container.",name:"className",required:!1,type:{name:"string | undefined"}},align:{defaultValue:null,description:"Determines the alignment of the popover content relative to the trigger element\n\ndefault: `bottom`",name:"align",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"center-vertical"'},{value:'"center-horizontal"'}]}},justify:{defaultValue:null,description:"Determines the justification of the popover content relative to the trigger element\n\ndefault: `start`",name:"justify",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"start"'},{value:'"middle"'},{value:'"end"'},{value:'"fit"'}]}},usePortal:{defaultValue:null,description:"Specifies that the popover content should be rendered at the end of the DOM,\nrather than in the DOM tree.\n\ndefault: `true`",name:"usePortal",required:!1,type:{name:"boolean | undefined"}},portalClassName:{defaultValue:null,description:"When usePortal is `true`, specifies a class name to apply to the root element of the portal.",name:"portalClassName",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"Click event handler passed to the root div element within the portal container.",name:"onClick",required:!1,type:{name:"MouseEventHandler<Element> | undefined"}},refEl:{defaultValue:null,description:"A reference to the element against which the popover component will be positioned.",name:"refEl",required:!1,type:{name:"RefObject<HTMLElement> | undefined"}},spacing:{defaultValue:null,description:"Specifies the amount of spacing (in pixels) between the trigger element and the Popover content.\n\ndefault: `10`",name:"spacing",required:!1,type:{name:"number | undefined"}},popoverZIndex:{defaultValue:null,description:"Number that controls the z-index of the popover element directly.",name:"popoverZIndex",required:!1,type:{name:"number | undefined"}},portalContainer:{defaultValue:null,description:"When usePortal is `true`, specifies an element to portal within. The default behavior is to generate a div at the end of the document to render within.",name:"portalContainer",required:!1,type:{name:"HTMLElement | null | undefined"}},scrollContainer:{defaultValue:null,description:"When usePortal is `true`, specifies the scrollable element to position relative to.",name:"scrollContainer",required:!1,type:{name:"HTMLElement | null | undefined"}},trigger:{defaultValue:null,description:"A slot for the element used to trigger the `Tooltip`.",name:"trigger",required:!1,type:{name:"Function | ReactElement<any, string | JSXElementConstructor<any>> | undefined"}},triggerEvent:{defaultValue:{value:"'hover'"},description:"Determines if a `hover` or `click` event will trigger the opening of a `Tooltip`.",name:"triggerEvent",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"hover"'},{value:'"click"'}]}},open:{defaultValue:{value:"`false`"},description:"Controls component and determines the open state of the `Tooltip`",name:"open",required:!1,type:{name:"boolean | undefined"}},setOpen:{defaultValue:null,description:"Callback to change the open state of the `Tooltip`.",name:"setOpen",required:!1,type:{name:"Dispatch<SetStateAction<boolean>> | undefined"}},darkMode:{defaultValue:{value:"false"},description:"Whether the `Tooltip` will appear in dark mode.",name:"darkMode",required:!1,type:{name:"boolean | undefined"}},shouldClose:{defaultValue:null,description:"Callback to determine whether or not `Tooltip` should close when user tries to close it.",name:"shouldClose",required:!1,type:{name:"(() => boolean) | undefined"}},enabled:{defaultValue:{value:"true"},description:"Enables Tooltip to trigger based on the event specified by `triggerEvent`.",name:"enabled",required:!1,type:{name:"boolean | undefined"}},onClose:{defaultValue:null,description:"Callback that is called when the tooltip is closed internally. E.g. on ESC press, on backdrop click, on blur.",name:"onClose",required:!1,type:{name:"(() => void) | undefined"}},baseFontSize:{defaultValue:null,description:"Allows consuming applications to override font-size as set by the LeafyGreen Provider.",name:"baseFontSize",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:"16"},{value:"13"}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tooltip/src/Tooltip.story.tsx#AlignmentTest"]={docgenInfo:AlignmentTest.__docgenInfo,name:"AlignmentTest",path:"packages/tooltip/src/Tooltip.story.tsx#AlignmentTest"})}catch(__react_docgen_typescript_loader_error){}try{ScrollableContainer.displayName="ScrollableContainer",ScrollableContainer.__docgenInfo={description:"",displayName:"ScrollableContainer",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"undefined"}},children:{defaultValue:null,description:"Content that will appear inside of the popover component.",name:"children",required:!0,type:{name:"ReactNode | ((Options: ChildrenFunctionParameters) => ReactNode)"}},className:{defaultValue:null,description:"Class name applied to popover content container.",name:"className",required:!1,type:{name:"string | undefined"}},align:{defaultValue:null,description:"Determines the alignment of the popover content relative to the trigger element\n\ndefault: `bottom`",name:"align",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"center-vertical"'},{value:'"center-horizontal"'}]}},justify:{defaultValue:null,description:"Determines the justification of the popover content relative to the trigger element\n\ndefault: `start`",name:"justify",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"start"'},{value:'"middle"'},{value:'"end"'},{value:'"fit"'}]}},usePortal:{defaultValue:null,description:"Specifies that the popover content should be rendered at the end of the DOM,\nrather than in the DOM tree.\n\ndefault: `true`",name:"usePortal",required:!1,type:{name:"boolean | undefined"}},portalClassName:{defaultValue:null,description:"When usePortal is `true`, specifies a class name to apply to the root element of the portal.",name:"portalClassName",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"Click event handler passed to the root div element within the portal container.",name:"onClick",required:!1,type:{name:"MouseEventHandler<Element> | undefined"}},refEl:{defaultValue:null,description:"A reference to the element against which the popover component will be positioned.",name:"refEl",required:!1,type:{name:"RefObject<HTMLElement> | undefined"}},spacing:{defaultValue:null,description:"Specifies the amount of spacing (in pixels) between the trigger element and the Popover content.\n\ndefault: `10`",name:"spacing",required:!1,type:{name:"number | undefined"}},popoverZIndex:{defaultValue:null,description:"Number that controls the z-index of the popover element directly.",name:"popoverZIndex",required:!1,type:{name:"number | undefined"}},portalContainer:{defaultValue:null,description:"When usePortal is `true`, specifies an element to portal within. The default behavior is to generate a div at the end of the document to render within.",name:"portalContainer",required:!1,type:{name:"HTMLElement | null | undefined"}},scrollContainer:{defaultValue:null,description:"When usePortal is `true`, specifies the scrollable element to position relative to.",name:"scrollContainer",required:!1,type:{name:"HTMLElement | null | undefined"}},trigger:{defaultValue:null,description:"A slot for the element used to trigger the `Tooltip`.",name:"trigger",required:!1,type:{name:"Function | ReactElement<any, string | JSXElementConstructor<any>> | undefined"}},triggerEvent:{defaultValue:{value:"'hover'"},description:"Determines if a `hover` or `click` event will trigger the opening of a `Tooltip`.",name:"triggerEvent",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"hover"'},{value:'"click"'}]}},open:{defaultValue:{value:"`false`"},description:"Controls component and determines the open state of the `Tooltip`",name:"open",required:!1,type:{name:"boolean | undefined"}},setOpen:{defaultValue:null,description:"Callback to change the open state of the `Tooltip`.",name:"setOpen",required:!1,type:{name:"Dispatch<SetStateAction<boolean>> | undefined"}},darkMode:{defaultValue:{value:"false"},description:"Whether the `Tooltip` will appear in dark mode.",name:"darkMode",required:!1,type:{name:"boolean | undefined"}},shouldClose:{defaultValue:null,description:"Callback to determine whether or not `Tooltip` should close when user tries to close it.",name:"shouldClose",required:!1,type:{name:"(() => boolean) | undefined"}},enabled:{defaultValue:{value:"true"},description:"Enables Tooltip to trigger based on the event specified by `triggerEvent`.",name:"enabled",required:!1,type:{name:"boolean | undefined"}},onClose:{defaultValue:null,description:"Callback that is called when the tooltip is closed internally. E.g. on ESC press, on backdrop click, on blur.",name:"onClose",required:!1,type:{name:"(() => void) | undefined"}},baseFontSize:{defaultValue:null,description:"Allows consuming applications to override font-size as set by the LeafyGreen Provider.",name:"baseFontSize",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:"16"},{value:"13"}]}},buttonText:{defaultValue:null,description:"",name:"buttonText",required:!0,type:{name:"string"}},refButtonPosition:{defaultValue:null,description:"",name:"refButtonPosition",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tooltip/src/Tooltip.story.tsx#ScrollableContainer"]={docgenInfo:ScrollableContainer.__docgenInfo,name:"ScrollableContainer",path:"packages/tooltip/src/Tooltip.story.tsx#ScrollableContainer"})}catch(__react_docgen_typescript_loader_error){}}}]);